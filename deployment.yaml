# Infraestructura para Despliegue de Seguridad
# Elementos a desplegar:
# 2. Instancias MVs:
#    - cbd-kong-instance
#    - cbd-db-instance (postgreSQL instalado y configurado)
#    - cbd-alarms-app-(a-c) (Monitoring app instalada)
#    - cbd-monitoring-app (Monitoring app instalada y ejecutando)

resources:
# Firewall rules
- name: ofipension-services-apps
  type: compute.v1.firewall
  properties:
    network: https://www.googleapis.com/compute/v1/projects/isis2503-talleres-434902/global/networks/default
    priority: 1000
    direction: INGRESS
    sourceTags: 
    - ofipension-circuit-breaker
    targetTags:
    - ofipension-services-firewall
    allowed:
    - IPProtocol: TCP
      ports: 
      - 8080
- name: ofipension-services-apps-web
  type: compute.v1.firewall
  properties:
    network: https://www.googleapis.com/compute/v1/projects/isis2503-talleres-434902/global/networks/default
    priority: 1000
    direction: INGRESS
    sourceRanges: 
    - 0.0.0.0/0
    targetTags:
    - ofipension-services-firewall
    allowed:
    - IPProtocol: TCP
      ports: 
      - 8080
- name: ofipension-circuit-breaker
  type: compute.v1.firewall
  properties:
    network: https://www.googleapis.com/compute/v1/projects/isis2503-talleres-434902/global/networks/default
    priority: 1000
    direction: INGRESS
    sourceRanges: 
    - 0.0.0.0/0
    targetTags:
    - ofipension-circuit-breaker
    allowed:
    - IPProtocol: TCP
      ports: 
      - 8000
- name: ofipension-circuit-breaker-admin
  type: compute.v1.firewall
  properties:
    network: https://www.googleapis.com/compute/v1/projects/isis2503-talleres-434902/global/networks/default
    priority: 1000
    direction: INGRESS
    sourceRanges: 
    - 0.0.0.0/0
    targetTags:
    - ofipension-circuit-breaker
    allowed:
    - IPProtocol: TCP
      ports: 
      - 8001
- name: ofipension-ofi-db
  type: compute.v1.firewall
  properties:
    network: https://www.googleapis.com/compute/v1/projects/isis2503-talleres-434902/global/networks/default
    priority: 1000
    direction: INGRESS
    sourceTags: 
    - ofipension-services-firewall
    targetTags:
    - ofipension-ofi-db
    allowed:
    - IPProtocol: TCP
      ports: 
      - 27017
     

# Database instance
- type: compute.v1.instance
  name: ofipensiones-db-instance
  properties:
    zone: us-central1-a
    machineType: https://www.googleapis.com/compute/v1/projects/isis2503-talleres-434902/zones/us-central1-a/machineTypes/e2-micro
    disks:
    - deviceName: boot
      type: PERSISTENT
      boot: true
      autoDelete: true
      initializeParams:
        sourceImage: https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/ubuntu-2004-focal-v20241016
    networkInterfaces:
    - network: https://www.googleapis.com/compute/v1/projects/isis2503-talleres-434902/global/networks/default
      networkIP: 10.128.0.52
      accessConfigs:
      - name: External NAT
        type: ONE_TO_ONE_NAT
    tags:
      items: 
      - ofipension-ofi-db
    metadata:
      items:
      - key: startup-script
        value: |
          #!/bin/bash
          # Actualiza e instala MongoDB
          sudo apt-get update
          sudo apt-get install -y gnupg
          wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | sudo apt-key add -
          echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu focal/mongodb-org/6.0 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-6.0.list
          sudo apt-get update
          sudo apt-get install -y mongodb-org

          # Configura la autenticaci√≥n y seguridad de MongoDB
          sudo systemctl start mongod
          sudo systemctl enable mongod

          sudo openssl rand -base64 32 | sudo tee /etc/mongodb.key
          sudo chmod 600 /etc/mongodb.key
          sudo chown mongodb:mongodb /etc/mongodb.key

          sudo sed -i '/#security:/a\
          security:\n  enableEncryption: true\n  encryptionKeyFile: /etc/mongodb.key' /etc/mongod.conf

          sudo sed -i '/bindIp:/c\
          bindIp: 0.0.0.0' /etc/mongod.conf

          sudo systemctl restart mongod

          mongo <<EOF
          use admin
          db.createUser({
            user: "admin",
            pwd: "oficlaveinjection",
            roles: [{ role: "userAdminAnyDatabase", db: "admin" }]
          })
          EOF

          mongo -u admin -p oficlaveinjection --authenticationDatabase admin <<EOF
          use ofipensionesdb
          db.createUser({
            user: "usuarioOfipension",
            pwd: "claveOfipension",
            roles: [{ role: "readWrite", db: "ofipensionesdb" }]
          })
          EOF


# Pagos Instance
- type: compute.v1.instance
  name: instance-pago-a
  properties:
    zone: us-central1-a
    machineType: https://www.googleapis.com/compute/v1/projects/isis2503-talleres-434902/zones/us-central1-a/machineTypes/e2-micro
    disks:
    - deviceName: boot
      type: PERSISTENT
      boot: true
      autoDelete: true
      initializeParams:
        sourceImage: https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/ubuntu-2004-focal-v20241016
    networkInterfaces:
    - network: https://www.googleapis.com/compute/v1/projects/isis2503-talleres-434902/global/networks/default
      networkIP: 10.128.0.53
      accessConfigs:
      - name: External NAT
        type: ONE_TO_ONE_NAT
    tags:
      items: 
      - ofipension-services-firewall
    metadata:
      items:
      - key: startup-script
        value: |
          #!/bin/bash
          sudo apt-get update
          sudo git clone https://github.com/isis2503-SQL-Injection/OfipensionesApp.git
          cd OfipensionesApp
          sudo apt install python3-pip -y
          sudo pip3 install -r requirements.txt
          sudo python3 manage.py makemigrations
          sudo python3 manage.py migrate
          sudo nohup python3 manage.py runserver 0.0.0.0:8080 &



- type: compute.v1.instance
  name: instance-pago-b
  properties:
    zone: us-central1-a
    machineType: https://www.googleapis.com/compute/v1/projects/isis2503-talleres-434902/zones/us-central1-a/machineTypes/e2-micro
    disks:
    - deviceName: boot
      type: PERSISTENT
      boot: true
      autoDelete: true
      initializeParams:
        sourceImage: https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/ubuntu-2004-focal-v20241016
    networkInterfaces:
    - network: https://www.googleapis.com/compute/v1/projects/isis2503-talleres-434902/global/networks/default
      networkIP: 10.128.0.54
      accessConfigs:
      - name: External NAT
        type: ONE_TO_ONE_NAT
    tags:
      items: 
      - ofipension-services-firewall
    metadata:
      items:
      - key: startup-script
        value: |
          #!/bin/bash
          sudo apt-get update
          sudo git clone https://github.com/isis2503-SQL-Injection/OfipensionesApp.git
          cd OfipensionesApp
          sudo apt install python3-pip -y
          sudo pip3 install -r requirements.txt
          sudo python3 manage.py makemigrations
          sudo python3 manage.py migrate
          sudo nohup python3 manage.py runserver 0.0.0.0:8080 &

  
- type: compute.v1.instance
  name: instance-pago-c
  properties:
    zone: us-central1-a
    machineType: https://www.googleapis.com/compute/v1/projects/isis2503-talleres-434902/zones/us-central1-a/machineTypes/e2-micro
    disks:
    - deviceName: boot
      type: PERSISTENT
      boot: true
      autoDelete: true
      initializeParams:
        sourceImage: https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/ubuntu-2004-focal-v20241016
    networkInterfaces:
    - network: https://www.googleapis.com/compute/v1/projects/isis2503-talleres-434902/global/networks/default
      networkIP: 10.128.0.55
      accessConfigs:
      - name: External NAT
        type: ONE_TO_ONE_NAT
    tags:
      items: 
      - ofipension-services-firewall
    metadata:
      items:
      - key: startup-script
        value: |
          #!/bin/bash
          sudo apt-get update
          sudo git clone https://github.com/isis2503-SQL-Injection/OfipensionesApp.git
          cd OfipensionesApp
          sudo apt install python3-pip -y
          sudo pip3 install -r requirements.txt
          sudo python3 manage.py makemigrations
          sudo python3 manage.py migrate
          sudo nohup python3 manage.py runserver 0.0.0.0:8080 &


#Monitoreo
- type: compute.v1.instance
  name: instance-monitoreo-pagos
  properties:
    zone: us-central1-a
    machineType: https://www.googleapis.com/compute/v1/projects/isis2503-talleres-434902/zones/us-central1-a/machineTypes/e2-micro
    disks:
    - deviceName: boot
      type: PERSISTENT
      boot: true
      autoDelete: true
      initializeParams:
        sourceImage: https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/ubuntu-2004-focal-v20241016
    networkInterfaces:
    - network: https://www.googleapis.com/compute/v1/projects/isis2503-talleres-434902/global/networks/default
      networkIP: 10.128.0.56
      accessConfigs:
      - name: External NAT
        type: ONE_TO_ONE_NAT
    tags:
      items: 
      - ofipension-services-firewall
    metadata:
      items:
      - key: startup-script
        value: |
          #!/bin/bash
          sudo apt-get update
          sudo git clone https://github.com/isis2503-SQL-Injection/OfipensionesApp.git
          cd OfipensionesApp
          sudo apt install python3-pip -y
          sudo pip3 install -r requirements.txt
          

# Kong instance
- type: compute.v1.instance
  name: pagos-kong-instance
  properties:
    zone: us-central1-a
    machineType: https://www.googleapis.com/compute/v1/projects/isis2503-talleres-434902/zones/us-central1-a/machineTypes/e2-micro
    disks:
    - deviceName: boot
      type: PERSISTENT
      boot: true
      autoDelete: true
      initializeParams:
        sourceImage: https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/ubuntu-2004-focal-v20241016
    networkInterfaces:
    - network: https://www.googleapis.com/compute/v1/projects/isis2503-talleres-434902/global/networks/default
      networkIP: 10.128.0.51
      accessConfigs:
      - name: External NAT
        type: ONE_TO_ONE_NAT
    tags:
      items: 
      - ofipension-circuit-breaker
    metadata:
      items:
      - key: startup-script
        value: |
          #!/bin/bash
          sudo apt-get update
          sudo apt-get install ca-certificates curl gnupg lsb-release -y
          sudo mkdir -m 0755 -p /etc/apt/keyrings
          sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          sudo apt-get update
          sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin -y
         
#sudo groupadd docker
#sudo usermod -aG docker $USER
#sudo newgrp docker 

#(cerrar y abrir terminal)

#sudo nano kong.yml (pegar el contenido del archivo kong.yml)       
#sudo docker network create kong-net
#sudo docker run -d --name kong --network=kong-net -v "$(pwd):/kong/declarative/" -e "KONG_DATABASE=off" -e "KONG_DECLARATIVE_CONFIG=/kong/declarative/kong.yml" -e "KONG_PROXY_ACCESS_LOG=/dev/stdout" -e "KONG_ADMIN_ACCESS_LOG=/dev/stdout" -e "KONG_PROXY_ERROR_LOG=/dev/stderr" -e "KONG_ADMIN_ERROR_LOG=/dev/stderr" -e "KONG_ADMIN_LISTEN=0.0.0.0:8001" -e "KONG_ADMIN_GUI_URL=http://localhost:8002" -p 8000:8000 -p 8001:8001 -p 8002:8002 kong/kong-gateway:2.7.2.0-alpine
#sudo docker ps

#Ejecutar Monitoreo
#python3 check-pagos-kong.py


#PARA MATAR

#ps aux | grep "manage.py runserver"
#kill 1111